#!/bin/bash

# 功能：编译xcode项目并打ipa包
# 使用说明：
#		编译project
#			ipa-build <project directory>
#		编译workspace
#			ipa-build  <workspace directory> -w -s <schemeName>
#
# 参数说明：  -t NAME				需要编译的target的名称
#			-w					编译workspace
#			-s NAME				对应workspace下需要编译的scheme


# 发布到蒲公英 具体请前往 [https://www.pgyer.com/doc/api#paramInfo]
uKey=""
apiKey=""
password=""
#编译的configuration，默认为Release，可自行修改为Debug或Distribution
build_config="Release"


if [ $# -lt 1 ];then
	echo "错误！ 需要指定xcode project工程根目录！"
	exit 2
fi

if [ ! -d $1 ];then
	echo "错误！第一个参数必须为工程根目录！"
	exit 2
fi

#工程绝对路径
cd $1
project_path=$(pwd)

param_pattern=":t:ws:"
OPTIND=2
while getopts ${param_pattern} optname
  do
    case "$optname" in
	  "w")
		workspace_name='*.xcworkspace'
		ls $project_path/$workspace_name &>/dev/null
		rtnValue=$?
		if [ $rtnValue = 0 ];then
			build_workspace=$(echo $(basename $project_path/$workspace_name))
		else
			echo  "错误！当前目录不是一个workspace工程，请检查，或去除 -w 选项！"
			exit 2
		fi

        ;;
	  "s")
		tmp_optind=$OPTIND
		tmp_optname=$optname
		tmp_optarg=$OPTARG

		OPTIND=$OPTIND-1
		if getopts $param_pattern optname ;then
			echo  "选项 $tmp_optname值有误！"
			exit 2
		fi
		OPTIND=$tmp_optind

		build_scheme=$tmp_optarg

        ;;
	  "t")
		tmp_optind=$OPTIND
		tmp_optname=$optname
		tmp_optarg=$OPTARG

		OPTIND=$OPTIND-1
		if getopts $param_pattern optname ;then
			echo  "选项 $tmp_optname值有误！"
			exit 2
		fi
		OPTIND=$tmp_optind

		build_target=$tmp_optarg

        ;;


      "?")
        echo "错误！未知选项 $OPTARG"
		exit 2
        ;;
      ":")
        echo "错误！ $OPTARG选项参数值为空！"
		exit 2
        ;;
      *)
      # Should not occur
        echo "未知错误！"
		exit 2
        ;;
    esac
  done
 
#build文件夹路径
build_path=${project_path}/build
#生成的app文件目录
appdirname=Release-iphoneos
if [ $build_config = Debug ];then
	appdirname=Debug-iphoneos
fi
if [ $build_config = Distribute ];then
	appdirname=Distribute-iphoneos
fi
#编译后文件路径(仅当编译workspace时才会用到)
compiled_path=${build_path}/${appdirname}

#clean
xcodebuild clean -configuration ${build_config}

#组合编译命令
build_cmd='xcodebuild'

if [ "$build_workspace" != "" ];then
	#编译workspace
	if [ "$build_scheme" = "" ];then
		echo "错误！当指定 -w 参数编译workSpace工程时，需要同时指定 -s 参数值，即scheme！"
		exit 2
	fi

	build_cmd=${build_cmd}' -workspace '${build_workspace}' -scheme '${build_scheme}' -configuration '${build_config}' CONFIGURATION_BUILD_DIR='${compiled_path}' ONLY_ACTIVE_ARCH=NO'

else
	#编译project
	build_cmd=${build_cmd}' -configuration '${build_config}

	if [ "$build_target" != "" ];then
		build_cmd=${build_cmd}' -target '${build_target}
	fi

fi


#编译工程
cd $project_path
$build_cmd || exit

#进入build路径
cd $build_path

#创建ipa-build文件夹
if [ -d ./ipa-build ];then
	rm -rf ipa-build
fi
mkdir ipa-build


#app文件名称
appname=$(basename ./${appdirname}/*.app)
#通过app文件名获得工程target名字
target_name=$(echo $appname | awk -F. '{print $1}')
#app文件中Info.plist文件路径
app_infoplist_path=${build_path}/${appdirname}/${appname}/Info.plist
#取版本号
bundleShortVersion=$(/usr/libexec/PlistBuddy -c "print CFBundleShortVersionString" ${app_infoplist_path})
#取build值
bundleVersion=$(/usr/libexec/PlistBuddy -c "print CFBundleVersion" ${app_infoplist_path})
#取displayName
displayName=$(/usr/libexec/PlistBuddy -c "print CFBundleDisplayName" ${app_infoplist_path})
#IPA名称
ipa_name="${displayName}_${platform_id}_${bundleShortVersion}_${build_config}_${bundleVersion}_$(date +"%Y%m%d")"
echo $ipa_name

#xcrun打包
xcrun -sdk iphoneos PackageApplication -v ./${appdirname}/*.app -o ${build_path}/ipa-build/${ipa_name}.ipa || exit

app_path="${build_path}/ipa-build/${ipa_name}.ipa"
#上传至蒲公英
if [ "${uKey}" != "" ] && [ "${apiKey}" != "" ] && [ "${password}" != "" ]; then
	curl -F "file=@${app_path}" -F "uKey=${uKey}" -F "_api_key=${apiKey}" -F "publishRange=2" -F "password=${password}" http://www.pgyer.com/apiv1/app/upload
fi
